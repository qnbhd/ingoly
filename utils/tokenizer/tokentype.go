package tokenizer

type TokenType int

const (
	NIL = iota
	EOF
	ENDMARKER
	NAME
	NUMBER
	STRING
	NEWLINE
	INDENT
	DEDENT
	LPAR
	RPAR
	LSQB
	RSQB
	COLON
	COMMA
	SEMI
	PLUS
	MINUS
	STAR
	SLASH
	VBAR
	AMPER
	LESS
	GREATER
	EQUAL
	DOT
	PERCENT
	LBRACE
	RBRACE
	EQEQUAL
	NOTEQUAL
	LESSEQUAL
	GREATEREQUAL
	TILDE
	CIRCUMFLEX
	LEFTSHIFT
	RIGHTSHIFT
	DOUBLESTAR
	PLUSEQUAL
	MINEQUAL
	STAREQUAL
	SLASHEQUAL
	PERCENTEQUA
	AMPEREQUAL
	VBAREQUAL
	CIRCUMFLEXEQUAL
	LEFTSHIFTEQUAL
	RIGHTSHIFTEQUAL
	DOUBLESTAREQUAL
	DOUBLESLASH
	DOUBLESLASHEQUAL
	AT
	ATEQUAL
	RARROW
	ELLIPSIS
	COLONEQUAL

	COMMENT
	PRINT
	IF
	ELSE
	FOR
	WHILE
)

func (tt TokenType) String() string {
	return [...]string{"NIL", "EOF", "ENDMARKER", "NAME",
		"NUMBER", "STRING", "NEWLINE", "INDENT",
		"DEDENT", "LPAR", "RPAR", "LSQB", "RSQB",
		"COLON", "COMMA", "SEMI", "PLUS", "MINUS", "STAR",
		"SLASH", "VBAR", "AMPER", "LESS", "GREATER", "EQUAL",
		"DOT", "PERCENT", "LBRACE", "RBRACE", "EQEQUAL",
		"NOTEQUAL", "LESSEQUAL", "GREATEREQUAL", "TILDE",
		"CIRCUMFLEX", "LEFTSHIFT", "RIGHTSHIFT", "DOUBLESTAR",
		"PLUSEQUAL", "MINEQUAL", "STAREQUAL", "SLASHEQUAL",
		"PERCENTEQUA", "AMPEREQUAL", "VBAREQUAL", "CIRCUMFLEXEQUAL",
		"LEFTSHIFTEQUAL", "RIGHTSHIFTEQUAL", "DOUBLESTAREQUAL",
		"DOUBLESLASH", "DOUBLESLASHEQUAL", "AT", "ATEQUAL",
		"RARROW", "ELLIPSIS", "COLONEQUAL", "COMMENT", "PRINT", "IF",
		"ELSE", "FOR", "WHILE"}[tt]
}
